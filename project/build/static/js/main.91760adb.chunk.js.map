{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA4CeA,MArBf,WAEE,OACE,gCAUI,wBAAQC,UAAU,MAAlB,qBACA,wBAAQA,UAAU,MAAlB,uBACA,wBAAQA,UAAU,MAAlB,uBC1BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91760adb.chunk.js","sourcesContent":["import React from 'react';\n// import {Button, LinearProgress} from \"@material-ui/core\";\nimport './App.css';\nimport './project.css'\n// import {makeStyles} from \"@material-ui/core\";\n\n// const useStyles = makeStyles({\n//   btn:{\n//     width: 200,\n//     color: \"black\",\n//     marginLeft: 60,\n//     marginTop: 30,\n//     transition: 'color 0.5s linear',\n//         '&:hover':{\n//       boxShadow: 'inset 200 0 0 0 red',\n//       cursor:'pointer',\n//       backgroundColor: 'pink',\n//   }\n//   }\n  \n// })\n\n\nfunction App() {\n  // const classes = useStyles()\n  return (\n    <div>\n         {/* <Button className={classes.btn} variant=\"outlined\" size=\"large\" >\n          Vente\n        </Button>\n        <Button className={classes.btn} variant=\"outlined\" size=\"large\">\n          Location\n        </Button>\n        <Button className={classes.btn} variant=\"outlined\" size=\"large\">\n          Dons\n        </Button> */}\n        <button className=\"btn\"> Vente </button>\n        <button className=\"btn\">Location </button>\n        <button className=\"btn\"> Dons</button>\n          \n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"./project.css\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}